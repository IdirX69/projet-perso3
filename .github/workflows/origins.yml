name: Continuous integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    services:
      mysql:
        image: mysql:8
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
        options: --health-cmd="mysqladmin ping" --health-interval 10s --health-timeout 5s --health-retries 5

    env:
      DB_HOST: localhost
      DB_USER: root
      DB_PASSWORD: ${{ secrets.CI_DB_PASSWORD }}
      DB_NAME: origins_digital

    steps:
      - uses: actions/checkout@v3

      - name: Set up npm
        uses: actions/setup-node@v2
        with:
          node-version: "18"

      - name: Install dependencies
        run: npm install

      - name: db
        run: npm run migrate

      - name: Test
        run: npm test

  build-image:
    strategy:
      matrix:
        component: ["frontend", "backend"]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u your-github-username --password-stdin

      - name: Build the Docker image
        uses: docker/build-push-action@v2
        with:
          context: ${{ matrix.component }}
          file: ${{ matrix.component }}/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/spm-${{ matrix.component }}:${{ github.ref_name }}
